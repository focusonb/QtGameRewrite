#pragma once
#include <QtCore>
#include <QtGui>
#include <QGraphicsView>
#include <map>

#include "comStruct.h"
//#include "GameWidget.h"
//#include "struct_iswin.h"
//#include <utility>
using namespace std;
//struct cmp;
//extern struct  Threadarg_iswin;
class GameWidget;
class QMessageBox;


using MapPoint = map<QPointF, int, cmp>;



void makeBoard(QGraphicsView* graphicsView, QGraphicsScene*scene, qreal& witdth_chess, qreal& height_chess, MapPoint*&ptrchesses);
void drawachess(bool&myturn, QPointF& point_chess, QGraphicsScene*scene, qreal& chess_width, MapPoint*&ptrchesses,
	bool& gamegoingon, QSemaphore* sematwo, QSemaphore* semaone);
QRectF  qpointtoqrectf(QPointF& point_chess, qreal& chess_width);
void pointstd(QPointF& point_chess,qreal& chess_width);
bool is_outrange(QPointF point_chess, qreal chess_width);
bool is_chessmade(MapPoint*&ptrchesses, QPointF& point_chess);
void split_a(string&s,QPointF&chesspoint);
\













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































